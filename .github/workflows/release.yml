on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**'
      - '!.github/**'
      
name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.ref }}
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '6.0.x'
    - name: Calculate Version
      id: calculate_version # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v3.1.11
      with:
        useConfigFile: true
        disableCache: true
        configFilePath: .github/Gitversion.yml
    - name: Create Tags
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

        git tag -a auth/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release auth/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a clickhouse/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release clickhouse/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a github/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release github/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a kafka/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release kafka/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a logger/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release logger/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a pureotel/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release pureotel/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a vault/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release vault/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        git tag -a yaml/v${{ steps.calculate_version.outputs.majorMinorPatch }} -m "Release yaml/v${{ steps.calculate_version.outputs.majorMinorPatch }}"
        
        git push origin auth/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin clickhouse/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin github/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin kafka/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin logger/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin pureotel/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin vault/v${{ steps.calculate_version.outputs.majorMinorPatch }}
        git push origin yaml/v${{ steps.calculate_version.outputs.majorMinorPatch }}
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.calculate_version.outputs.majorMinorPatch }}
        release_name: Release v${{ steps.calculate_version.outputs.majorMinorPatch }}
        body: |
          # goLibMyCarrier v${{ steps.calculate_version.outputs.majorMinorPatch }}
          
          This release includes updates to all Go packages in the goLibMyCarrier collection.
          
          ## Packages Released
          
          All packages have been tagged with version `v${{ steps.calculate_version.outputs.majorMinorPatch }}`:
          
          - **auth** - Authentication middleware for Gin framework
          - **clickhouse** - ClickHouse database utilities  
          - **github** - GitHub authentication and interaction utilities
          - **kafka** - Kafka producer and consumer utilities
          - **logger** - Pre-configured Zap logger
          - **pureotel** - OpenTelemetry integration for distributed tracing
          - **vault** - HashiCorp Vault interaction utilities
          - **yaml** - YAML file read/write utilities
          
          ## Installation
          
          Install any package using:
          ```bash
          go get github.com/MyCarrier-DevOps/goLibMyCarrier/<package>@v${{ steps.calculate_version.outputs.majorMinorPatch }}
          ```
          
          For example:
          ```bash
          go get github.com/MyCarrier-DevOps/goLibMyCarrier/kafka@v${{ steps.calculate_version.outputs.majorMinorPatch }}
          go get github.com/MyCarrier-DevOps/goLibMyCarrier/auth@v${{ steps.calculate_version.outputs.majorMinorPatch }}
          ```
          
          ## Documentation
          
          View package documentation on pkg.go.dev:
          - [auth](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/auth@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [clickhouse](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/clickhouse@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [github](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/github@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [kafka](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/kafka@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [logger](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/logger@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [pureotel](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/pureotel@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [vault](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/vault@v${{ steps.calculate_version.outputs.majorMinorPatch }})
          - [yaml](https://pkg.go.dev/github.com/MyCarrier-DevOps/goLibMyCarrier/yaml@v${{ steps.calculate_version.outputs.majorMinorPatch }})
        draft: false
        prerelease: false

